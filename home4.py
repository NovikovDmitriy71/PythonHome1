# Задача 36: Напишите функцию print_operation_table(operation, num_rows=6, 
# num_columns=6), которая принимает в качестве аргумента функцию, вычисляющую 
# элемент по номеру строки и столбца. Аргументы num_rows и num_columns указывают 
# число строк и столбцов таблицы, которые должны быть распечатаны. Нумерация строк 
# и столбцов идет с единицы (подумайте, почему не с нуля).
#  Примечание: бинарной операцией называется любая операция, 
# у которой ровно два аргумента, как, например, у операции умножения.
#*Пример:*

#**Ввод:** `print_operation_table(lambda x, y: x * y) ` 
#**Вывод:**
# 1 2 3 4 5 6

# 2 4 6 8 10 12 
# 3 6 9 12 15 18 
# 4 8 12 16 20 24
# 5 10 15 20 25 30
# 6 12 18 24 30 36

# def print_operation_table(operation, num_rows=6, num_columns=6):
#     a = [[operation(i, j)\
#         for j in range(1, num_columns + 1)]\
#         for i in range(1, num_rows + 1)]
#     for i in a:
#         print([f"{x:>3}" for x in i])
# print_operation_table(lambda x, y: x * y)





#__________________________________________________________________________
# Задача 34:  Винни-Пух попросил Вас посмотреть, 
# есть ли в его стихах ритм. Поскольку разобраться в его кричалках не настолько просто, 
# насколько легко он их придумывает, Вам стоит написать программу. Винни-Пух считает, 
# что ритм есть, если число слогов (т.е. число гласных букв) 
# в каждой фразе стихотворения одинаковое. 
# Фраза может состоять из одного слова, если во фразе несколько слов, 
# то они разделяются дефисами. Фразы отделяются друг от друга пробелами. 
# Стихотворение  Винни-Пух вбивает в программу с клавиатуры. В ответе напишите 
# “Парам пам-пам”, если с ритмом все в порядке и “Пам парам”, 
# если с ритмом все не в порядке
# Пример:*

# Ввод:** пара-ра-рам рам-пам-папам па-ра-па-да    
# Вывод:** Парам пам-пам  
#  _______________________________________________________________________

# def count_El(strok): 
#     strok = strok.split()          # Преобразуем в массив
#     list1 = []
#     for slog  in strok:            # проход по всем слогам
#         sum_el= 0       
#         for i in slog:             # проход по всем буквам в слоге
#             if i in list2:         # поиск гласной буквы из слога 
#              sum_el += 1   
#         list1.append(sum_el)       # добавляем в массив сумму найденных букв в слоге
#     return len(set(list1))>1       # условиt выбора set() на дубликаты

# strok = "пара-ра-рам рам-пам-папам па-ра-па-да" # cтрока поиска
# list2 = 'аеёиоуыэюя'                            # условие поиска           

# if count_El(strok):
#     print('Пам парам') 
# else:
#     print('Парам пам-пам')
##_____________________________________________________________-
# Если известна гласная буква по поиску ######################

def st(str1):
    list1=[]
    str1 = str1.split()  
    for i in str1:
        list1.append(sum(map(lambda x: 1 if x== 'а' else 0, i)))
    return len(set(list1))>1  
str1="пара-ра-рам рам-пам-папам па-ра-па-да" 

if st(str1):
    print('Пам парам') 
else:
    print('Парам пам-пам')


